/**
 * Interactive configuration for Etendo Copilot Module
 * This configuration file provides guided setup for all Copilot-related properties
 * used by the copilot.variables.setup task and the broader Copilot functionality.
 */


copilot {
    setup {
        description = "Run automated Copilot configuration setup"
        help = "üöÄ Executes copilot.variables.setup task to automatically detect and configure optimal Copilot settings based on your Docker setup"
        value = "Execute"
        sensitive = false
        required = true
        group = "Copilot"
        order = 10
        process = true
        name = "copilot.variables.setup"
    }
    dockerized {
        description = "Enable Copilot to run in Docker container"
        help = "üê≥ When enabled, Copilot runs as a Docker service. When disabled, runs as local process"
        value = "false"
        sensitive = false
        required = true
        group = "Copilot"
        order = 20
        name = "docker_com.etendoerp.copilot"
    }
    etendoHost {
        description = "Etendo server URL for Copilot communication"
        help = "üåê URL where Copilot sends requests to communicate with Etendo system (typically http://localhost:8080/etendo)"
        value = "http://localhost:8080/etendo"
        sensitive = false
        required = true
        group = "Copilot"
        order = 30
        name = "ETENDO_HOST"
    }
    etendoHostDocker {
        description = "Etendo host URL for Docker-to-Docker communication"
        help = "üê≥ URL used when Copilot runs in Docker container (use 'tomcat' hostname if Tomcat is also dockerized)"
        value = "http://tomcat:8080/etendo"
        sensitive = false
        required = true
        group = "Copilot"
        order = 40
        name = "ETENDO_HOST_DOCKER"
    }
    copilotHost {
        description = "Copilot service hostname"
        help = "üè† Hostname for Copilot service ('localhost' for local, 'copilot' for Docker service name)"
        sensitive = false
        required = true
        group = "Copilot"
        order = 50
        name = "COPILOT_HOST"
    }
    copilotPort {
        description = "Copilot main service port"
        help = "üö™ Port for Copilot HTTP API service (default: 5005)"
        value = "5005"
        sensitive = false
        required = true
        group = "Copilot"
        order = 60
        name = "COPILOT_PORT"
    }
    copilotPortMCP {
        description = "Copilot MCP server port"
        help = "üîó Port for Model Context Protocol server (default: 5006, used for AI agent communication)"
        value = "5006"
        sensitive = false
        required = false
        group = "Copilot"
        order = 70
        name = "COPILOT_PORT_MCP"
    }
    openai {
        description = "OpenAI API key"
        help = "ü§ñ Required API key for OpenAI GPT models (get from https://platform.openai.com/api-keys)"
        value = ""
        sensitive = true
        required = true
        group = "Copilot"
        order = 80
        name = "OPENAI_API_KEY"
    }
}

copilotAdvanced {
    debugPort {
        description = "Copilot debug port"
        help = "üêõ Port for remote debugging Copilot service (only needed for development)"
        value = "5100"
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 10
        name = "COPILOT_PORT_DEBUG"
    }
    debugMode {
        description = "Enable debug mode"
        help = "üîß Enable verbose debugging for Copilot development and troubleshooting"
        value = "false"
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 20
        name = "COPILOT_DEBUG"
    }
    anthropic {
        description = "Anthropic Claude API key"
        help = "üß† Optional API key for Anthropic Claude models (get from https://console.anthropic.com/)"
        value = ""
        sensitive = true
        required = false
        group = "Copilot (Advanced)"
        order = 30
        name = "ANTHROPIC_API_KEY"
    }
    google {
        description = "Google API key"
        help = "üîç Optional API key for Google services like Gemini models (get from https://console.cloud.google.com/)"
        value = ""
        sensitive = true
        required = false
        group = "Copilot (Advanced)"
        order = 40
        name = "GOOGLE_API_KEY"
    }
    langsmithApiKey {
        description = "LangSmith API key"
        help = "üìä Optional API key for LangSmith tracing and monitoring (get from https://smith.langchain.com/)"
        value = ""
        sensitive = true
        required = false
        group = "Copilot (Advanced)"
        order = 50
        name = "LANGSMITH_API_KEY"
    }
    langsmithTracing {
        description = "Enable LangSmith tracing"
        help = "üìà Enable detailed tracing for debugging AI interactions (requires LANGSMITH_API_KEY)"
        value = "false"
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 60
        name = "LANGSMITH_TRACING"
    }
    langsmithProject {
        description = "LangSmith project name"
        help = "üìÅ Project name for organizing traces and experiments in LangSmith"
        value = ""
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 70
        name = "LANGSMITH_PROJECT"
    }
    proxyUrl {
        description = "HTTP proxy URL"
        help = "üåê Optional HTTP proxy URL for routing Copilot requests (format: http://proxy-host:port)"
        value = ""
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 80
        name = "COPILOT_PROXY_URL"
    }
    dockerized-litellm {
        description = "Enable LiteLLM proxy service"
        help = "üîÑ Enable dockerized LiteLLM proxy for model routing (development and testing only)"
        value = "false"
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 90
        name = "docker_com.etendoerp.copilot.litellm"
    }
    litellmProxyPort {
        description = "LiteLLM proxy port"
        help = "üö™ Port for LiteLLM proxy service when dockerized (default: 4000) (development and testing only)"
        value = "4000"
        sensitive = false
        required = false
        group = "Copilot (Advanced)"
        order = 100
        name = "COPILOT_LITELLM_PROXY_PORT"
    }
}
