# Template docker-push

# This template allows you to build and push your docker image to a Docker Hub account.
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to master.

# Prerequisites: $DOCKERHUB_USERNAME, $DOCKERHUB_PASSWORD setup as deployment variables

definitions:
  steps:
    - step: &build-step
        image: maven:3.3.9
        name: SonarQube analysis
        script:
          - pipe: sonarsource/sonarqube-scan:1.0.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
    - step: &make-review
        name: Make Review Step
        script:
          - printenv
          -  echo "-------------------------------------------------------------------------"
          -  echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
          -  docker run -d -p 5000:5000 -e REPO_API_TOKEN="${ETENDOBOT_TOKEN}" -e PULL_REQUEST=$BITBUCKET_PR_ID -e PROJECT=$BITBUCKET_REPO_OWNER -e REPO_SLUG=$BITBUCKET_REPO_SLUG -e OPENAI_API_KEY=$OPENAI_API_KEY etendo/code-reviewer:latest
          -  echo "-------------------------------------------------------------------------"
          -  sleep 10s
          - response=$(curl -s -o response.txt -w "%{http_code}" -X GET http://localhost:5000/review/bitbucket)
          -  if [ $response -ne 200 ]; then
          -    echo "API call failed with status code $response"
          -    echo "Response text:"
          -    cat response.txt
          -    exit 1
          -  fi
          -  echo "API call successful with status code $response"
          -  echo "Response text:"
          -  cat response.txt
        services:
          - docker
    - step: &test-build
        name: Build image and test dummy request
        script:
          - docker build -t copilot-test .
          - docker run -d -p 5001:5001 -e OPENAI_API_KEY=$OPENAI_API_KEY -e BASTIAN_URL=https://bastian.back.labs.etendo.cloud -e COPILOT_PORT=5001 copilot-test
          - sleep 30s
          - |
            REQUEST_PAYLOAD='{"question": "What is etendo?"}'
            response=$(curl -s -o response.txt -X POST -H "Content-Type: application/json" -d "$REQUEST_PAYLOAD" http://localhost:5001/question)
          -  if [ $response -ne 200 ]; then
          -    echo "Copilot API call failed with status code $response"
          -    exit 1
          -  fi
          -  echo "Copilot API call successful with status code $response"
          -  echo "Response text:"
          -  cat response.txt
        services:
          - docker
  caches:
    sonar: ~/.sonar
clone:
  depth: full
pipelines:
  branches:
    master:
      - step: *build-step
      - step:
          image: atlassian/default-image:3
          name: Deploy to Production
          deployment: Production
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:master
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
    develop:
      - step:
          image: atlassian/default-image:3
          name: Deploy to Develop
          deployment: Develop
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:develop
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
    experimental:
      - step:
          name: Deploy to Experimental
          deployment: Experimental
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:experimental
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
  pull-requests:
    '**':
      - parallel:
        - step: *make-review
        - step: *build-step
        - step: *test-build
