# Template docker-push

# This template allows you to build and push your docker image to a Docker Hub account.
# The workflow allows running tests, code linting and security scans on feature branches (as well as master).
# The docker image will be validated and pushed to the docker registry after the code is merged to master.

# Prerequisites: $DOCKERHUB_USERNAME, $DOCKERHUB_PASSWORD setup as deployment variables

definitions:
  steps:
    - step: &build-step
        image: maven:3.3.9
        name: SonarQube analysis
        script:
          - pipe: sonarsource/sonarqube-scan:1.0.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL} # Get the value from the repository/workspace variable.
              SONAR_TOKEN: ${SONAR_TOKEN} # Get the value from the repository/workspace variable. You shouldn't set secret in clear text here.
  caches:
    sonar: ~/.sonar
clone:
  depth: full
pipelines:
  branches:
    master:
      - step: *build-step
      - step:
          image: atlassian/default-image:3
          name: Deploy to Production
          deployment: Production
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:master
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
    develop:
      - step:
          image: atlassian/default-image:3
          name: Deploy to Develop
          deployment: Develop
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:develop
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
    experimental:
      - step:
          name: Deploy to Experimental
          deployment: Experimental
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE=etendo/etendo_copilot_core:experimental
            - docker build -t ${IMAGE} .
            - docker push ${IMAGE}
          services:
            - docker
  pull-requests:
    '**':
      - step: *build-step
